// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int      @id @default(autoincrement())
  gender      String
  type        String
  title       String
  description String
  price       Float
  collection  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  images     ProductImage[]
  variants   ProductVariant[]
  orderItems OrderItem[]
  cartItems  CartItem[]
  wishlists  WishlistItem[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model ProductVariant {
  id        Int     @id @default(autoincrement())
  size      String
  stock     Int
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders    Order[]
  carts     Cart[]
  wishlists Wishlist[]
}

model Order {
  id            String   @id @default(cuid())
  total         Float
  status        String   @default("pending") // pending | paid | shipped | delivered | cancelled
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  paymentMethod String

  userId String?
  user   User?   @relation(fields: [userId], references: [id])

  fullName String
  phone    String
  country  String
  city     String
  address  String

  orderItems OrderItem[]
}

model OrderItem {
  id       Int     @id @default(autoincrement())
  quantity Int
  size     String?
  price    Float

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  orderId String
  order   Order  @relation(fields: [orderId], references: [id])
}

model Cart {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  items CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  size      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  cartId String
  cart   Cart   @relation(fields: [cartId], references: [id])
}

model Wishlist {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  items WishlistItem[]
}

model WishlistItem {
  id Int @id @default(autoincrement())

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  wishlistId String
  wishlist   Wishlist @relation(fields: [wishlistId], references: [id])
}
